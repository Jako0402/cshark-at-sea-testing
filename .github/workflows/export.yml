name: Build and Deploy Dedicated Server

on:
  push:
    branches: [ main ]

env:
  GODOT_VERSION: 4.4.1
  PROJECT_PATH: godot
  EXPORT_NAME: cshark-at-sea-server 

jobs:
  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p /tmp/godot/export_templates/
          cp -r /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable /tmp/godot/export_templates/

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "linux-server" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/

  docker-build-and-push:
    name: Docker Build and Push
    runs-on: ubuntu-latest  # Uses GitHub-hosted runner with Docker installed
    needs: export-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Linux Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: build/linux/

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -f ./docker/server.Dockerfile -t ghcr.io/${{ github.repository }}/dedicated-server:latest .

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/dedicated-server:latest

